/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_APP_APP_MESSAGES_PB_H_INCLUDED
#define PB_APP_APP_MESSAGES_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _App_Debug_Level {
    App_Debug_Level_INFO = 0,
    App_Debug_Level_WARNING = 1,
    App_Debug_Level_ERROR = 2
} App_Debug_Level;

/* Struct definitions */
typedef struct _App_Debug {
    App_Debug_Level level;
    char msg[257];
} App_Debug;

typedef struct _App_Node_State {
    bool has_command_id;
    uint32_t command_id;
    bool has_command_data;
    char command_data[33];
} App_Node_State;

typedef struct _App_Communication {
    pb_size_t which_payload;
    union {
        App_Node_State node_state;
        App_Debug debug_message;
    } payload;
} App_Communication;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _App_Debug_Level_MIN App_Debug_Level_INFO
#define _App_Debug_Level_MAX App_Debug_Level_ERROR
#define _App_Debug_Level_ARRAYSIZE ((App_Debug_Level)(App_Debug_Level_ERROR+1))

#define App_Debug_level_ENUMTYPE App_Debug_Level




/* Initializer values for message structs */
#define App_Debug_init_default                   {_App_Debug_Level_MIN, ""}
#define App_Node_State_init_default              {false, 0, false, ""}
#define App_Communication_init_default           {0, {App_Node_State_init_default}}
#define App_Debug_init_zero                      {_App_Debug_Level_MIN, ""}
#define App_Node_State_init_zero                 {false, 0, false, ""}
#define App_Communication_init_zero              {0, {App_Node_State_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define App_Debug_level_tag                      1
#define App_Debug_msg_tag                        2
#define App_Node_State_command_id_tag            1
#define App_Node_State_command_data_tag          2
#define App_Communication_node_state_tag         1
#define App_Communication_debug_message_tag      2

/* Struct field encoding specification for nanopb */
#define App_Debug_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UENUM,    level,             1) \
X(a, STATIC,   REQUIRED, STRING,   msg,               2)
#define App_Debug_CALLBACK NULL
#define App_Debug_DEFAULT NULL

#define App_Node_State_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UINT32,   command_id,        1) \
X(a, STATIC,   OPTIONAL, STRING,   command_data,      2)
#define App_Node_State_CALLBACK NULL
#define App_Node_State_DEFAULT NULL

#define App_Communication_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,node_state,payload.node_state),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,debug_message,payload.debug_message),   2)
#define App_Communication_CALLBACK NULL
#define App_Communication_DEFAULT NULL
#define App_Communication_payload_node_state_MSGTYPE App_Node_State
#define App_Communication_payload_debug_message_MSGTYPE App_Debug

extern const pb_msgdesc_t App_Debug_msg;
extern const pb_msgdesc_t App_Node_State_msg;
extern const pb_msgdesc_t App_Communication_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define App_Debug_fields &App_Debug_msg
#define App_Node_State_fields &App_Node_State_msg
#define App_Communication_fields &App_Communication_msg

/* Maximum encoded size of messages (where known) */
#define APP_APP_MESSAGES_PB_H_MAX_SIZE           App_Communication_size
#define App_Communication_size                   264
#define App_Debug_size                           261
#define App_Node_State_size                      40

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
