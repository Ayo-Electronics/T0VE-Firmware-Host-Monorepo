# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: app_messages.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import (
    List,
    Optional,
)

import betterproto

from .. import (
    AppBool4 as _AppBool4__,
    AppCoBEepromCommand as _AppCoBEepromCommand__,
    AppCoBEepromStatus as _AppCoBEepromStatus__,
    AppCoBTempStatus as _AppCoBTempStatus__,
    AppCommsCommand as _AppCommsCommand__,
    AppCommsStatus as _AppCommsStatus__,
    AppDebug as _AppDebug__,
    AppDebugLevel as _AppDebugLevel__,
    AppHispeedCommand as _AppHispeedCommand__,
    AppHispeedStatus as _AppHispeedStatus__,
    AppMulticardCommand as _AppMulticardCommand__,
    AppMulticardStatus as _AppMulticardStatus__,
    AppNodeState as _AppNodeState__,
    AppOffsetCtrlCommand as _AppOffsetCtrlCommand__,
    AppOffsetCtrlStatus as _AppOffsetCtrlStatus__,
    AppPmCommand as _AppPmCommand__,
    AppPmStatus as _AppPmStatus__,
    AppStateSupervisorStatus as _AppStateSupervisorStatus__,
    AppUint322 as _AppUint322__,
    AppUint324 as _AppUint324__,
    AppUint3210 as _AppUint3210__,
    AppWgBiasCommand as _AppWgBiasCommand__,
    AppWgBiasSetpoints as _AppWgBiasSetpoints__,
    AppWgBiasStatus as _AppWgBiasStatus__,
)


class DebugLevel(betterproto.Enum):
    INFO = 0
    WARNING = 1
    ERROR = 2


@dataclass(eq=False, repr=False)
class Uint322(betterproto.Message):
    """
    ========================== SHARED "TYPES" ==========================
    the most standards-compliant way to define fixed-sized arrays, but also define them as optional
    involves wrapping them in a message. Annoying, but it works.
    sizes set in .options file
    """

    values: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class Uint324(betterproto.Message):
    values: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class Uint3210(betterproto.Message):
    values: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class Bool4(betterproto.Message):
    values: List[bool] = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class Debug(betterproto.Message):
    level: "_AppDebugLevel__" = betterproto.enum_field(1)
    msg: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class StateSupervisorStatus(betterproto.Message):
    """### STATE SUPERVISOR ###"""

    decode_err: bool = betterproto.bool_field(1)
    decode_err_deserz: int = betterproto.uint32_field(2)
    decode_err_magic: int = betterproto.uint32_field(3)
    decode_err_msgtype: int = betterproto.uint32_field(4)
    encode_err: bool = betterproto.bool_field(5)
    encode_err_serz: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class MulticardStatus(betterproto.Message):
    """### MULTICARD INFORMATION ###"""

    all_present: bool = betterproto.bool_field(1)
    node_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MulticardCommand(betterproto.Message):
    sel_pd_input_aux_npic: Optional[bool] = betterproto.bool_field(1, optional=True)


@dataclass(eq=False, repr=False)
class PmStatus(betterproto.Message):
    """### POWER MONITOR ###"""

    immediate_power_status: bool = betterproto.bool_field(1)
    debounced_power_status: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class PmCommand(betterproto.Message):
    regulator_enable: Optional[bool] = betterproto.bool_field(1, optional=True)


@dataclass(eq=False, repr=False)
class OffsetCtrlStatus(betterproto.Message):
    device_present: bool = betterproto.bool_field(1)
    device_error: bool = betterproto.bool_field(2)
    offset_readback: "_AppUint324__" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class OffsetCtrlCommand(betterproto.Message):
    do_readback: Optional[bool] = betterproto.bool_field(1, optional=True)
    offset_set: Optional["_AppUint324__"] = betterproto.message_field(2, optional=True)


@dataclass(eq=False, repr=False)
class HispeedStatus(betterproto.Message):
    """### HISPEED SUBSYSTEM ###"""

    armed: bool = betterproto.bool_field(1)
    done_success: bool = betterproto.bool_field(2)
    done_err_ready: bool = betterproto.bool_field(3)
    done_err_timeout: bool = betterproto.bool_field(4)
    done_err_pwr: bool = betterproto.bool_field(5)
    tia_adc_readback: "_AppUint324__" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class HispeedCommand(betterproto.Message):
    arm_request: Optional[bool] = betterproto.bool_field(1, optional=True)
    load_test_sequence: Optional[bool] = betterproto.bool_field(2, optional=True)
    soa_enable: Optional["_AppBool4__"] = betterproto.message_field(3, optional=True)
    tia_enable: Optional["_AppBool4__"] = betterproto.message_field(4, optional=True)
    soa_dac_drive: Optional["_AppUint324__"] = betterproto.message_field(
        5, optional=True
    )


@dataclass(eq=False, repr=False)
class CoBTempStatus(betterproto.Message):
    """### CoB TEMPERATURE ###"""

    device_present: bool = betterproto.bool_field(1)
    device_error: bool = betterproto.bool_field(2)
    device_id: int = betterproto.uint32_field(3)
    temperature_celsius: float = betterproto.float_field(4)


@dataclass(eq=False, repr=False)
class CoBEepromStatus(betterproto.Message):
    """### CoB EEPROM ###"""

    device_present: bool = betterproto.bool_field(1)
    device_error: bool = betterproto.bool_field(2)
    cob_uid: int = betterproto.uint32_field(3)
    cob_desc: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class CoBEepromCommand(betterproto.Message):
    do_cob_write_desc: Optional[bool] = betterproto.bool_field(1, optional=True)
    cob_desc_set: Optional[str] = betterproto.string_field(2, optional=True)
    cob_write_key: Optional[int] = betterproto.uint32_field(3, optional=True)


@dataclass(eq=False, repr=False)
class WgBiasSetpoints(betterproto.Message):
    """### WAVEGUIDE BIAS DRIVES ###"""

    stub_setpoint: "_AppUint3210__" = betterproto.message_field(1)
    mid_setpoint: "_AppUint324__" = betterproto.message_field(2)
    bulk_setpoint: "_AppUint322__" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class WgBiasStatus(betterproto.Message):
    device_present: bool = betterproto.bool_field(1)
    device_error: bool = betterproto.bool_field(2)
    setpoints_readback: "_AppWgBiasSetpoints__" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class WgBiasCommand(betterproto.Message):
    setpoints: Optional["_AppWgBiasSetpoints__"] = betterproto.message_field(
        1, optional=True
    )
    regulator_enable: Optional[bool] = betterproto.bool_field(2, optional=True)
    do_readback: Optional[bool] = betterproto.bool_field(3, optional=True)


@dataclass(eq=False, repr=False)
class CommsStatus(betterproto.Message):
    """### COMMS INTERFACE ###"""

    comms_connected: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class CommsCommand(betterproto.Message):
    allow_connection: Optional[bool] = betterproto.bool_field(1, optional=True)


@dataclass(eq=False, repr=False)
class NodeState(betterproto.Message):
    state_supervisor_st: "_AppStateSupervisorStatus__" = betterproto.message_field(1)
    multicard_st: "_AppMulticardStatus__" = betterproto.message_field(2)
    multicard_cmd: "_AppMulticardCommand__" = betterproto.message_field(3)
    pm_onboard_st: "_AppPmStatus__" = betterproto.message_field(4)
    pm_onboard_cmd: "_AppPmCommand__" = betterproto.message_field(5)
    pm_motherboard_st: "_AppPmStatus__" = betterproto.message_field(6)
    pm_motherboard_cmd: "_AppPmCommand__" = betterproto.message_field(7)
    offset_ctrl_st: "_AppOffsetCtrlStatus__" = betterproto.message_field(8)
    offset_ctrl_cmd: "_AppOffsetCtrlCommand__" = betterproto.message_field(9)
    hispeed_st: "_AppHispeedStatus__" = betterproto.message_field(10)
    hispeed_cmd: "_AppHispeedCommand__" = betterproto.message_field(11)
    cob_temp_st: "_AppCoBTempStatus__" = betterproto.message_field(12)
    cob_eeprom_st: "_AppCoBEepromStatus__" = betterproto.message_field(13)
    cob_eeprom_cmd: "_AppCoBEepromCommand__" = betterproto.message_field(14)
    wg_bias_st: "_AppWgBiasStatus__" = betterproto.message_field(15)
    wg_bias_cmd: "_AppWgBiasCommand__" = betterproto.message_field(16)
    comms_st: "_AppCommsStatus__" = betterproto.message_field(17)
    comms_cmd: "_AppCommsCommand__" = betterproto.message_field(18)
    magic_number: int = betterproto.uint32_field(19)


@dataclass(eq=False, repr=False)
class Communication(betterproto.Message):
    node_state: "_AppNodeState__" = betterproto.message_field(1, group="payload")
    debug_message: "_AppDebug__" = betterproto.message_field(2, group="payload")
